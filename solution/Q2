a)Algorithm B prefer logn elements in x at indiscriminate and implement an o(n)-time calculation for each. Choosing an element at random takes 0(1) time, choosing logn elements takes logn time.Algorithm B performs 0(n) operations on each of the logn elements. Hence, total time taken by algorithm B = O(nlogn) + 0(logn) = O(nlogn) 
b) Best case is when all the numbers are odd. For each odd number in X it requires 0(log n) time , so for all n elements it requires 0(n log n) time. The worst case is when all numbers are even. For each even number it requires 0(n) in X. Therefore total time requires is 0(u *n)= 0(n2). 
c) In Big-0 notation is an upper bound on their algorithm. There's nothing being said about the lower bound. As such, it may be the case that Bob's algorithm has a better lower bound than Al's algorithm. 
